-----------------------------------------CPU Info(cat /proc/cpuinfo)------------------------------------------------

processor	: 0
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i5-4570 CPU @ 3.20GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 1000.000
cache size	: 6144 KB
physical id	: 0
siblings	: 4
core id		: 0
cpu cores	: 4
apicid		: 0
initial apicid	: 0
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6384.68
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 1
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i5-4570 CPU @ 3.20GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 3000.000
cache size	: 6144 KB
physical id	: 0
siblings	: 4
core id		: 1
cpu cores	: 4
apicid		: 2
initial apicid	: 2
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6384.68
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 2
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i5-4570 CPU @ 3.20GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 3201.000
cache size	: 6144 KB
physical id	: 0
siblings	: 4
core id		: 2
cpu cores	: 4
apicid		: 4
initial apicid	: 4
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6384.68
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual
power management:

processor	: 3
vendor_id	: GenuineIntel
cpu family	: 6
model		: 60
model name	: Intel(R) Core(TM) i5-4570 CPU @ 3.20GHz
stepping	: 3
microcode	: 0x16
cpu MHz		: 1000.000
cache size	: 6144 KB
physical id	: 0
siblings	: 4
core id		: 3
cpu cores	: 4
apicid		: 6
initial apicid	: 6
fpu		: yes
fpu_exception	: yes
cpuid level	: 13
wp		: yes
flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc aperfmperf eagerfpu pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm ida arat epb xsaveopt pln pts dtherm tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 hle avx2 smep bmi2 erms invpcid rtm
bogomips	: 6384.68
clflush size	: 64
cache_alignment	: 64
address sizes	: 39 bits physical, 48 bits virtual



-----------------------------------------Ploy with Fractional Powers-------------------------------------------------------

benchmark-llvm-sqrt-vectorize.py
Time= 0.037257194519  expr= x**1.0
Time= 0.640280008316  expr= x**0.5 + x**1.0
Time= 1.21580410004  expr= x**0.333333333333333 + x**0.5 + x**1.0
Time= 1.80925416946  expr= x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 2.38864803314  expr= x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 3.00670194626  expr= x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 3.61068415642  expr= x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 4.2643969059  expr= x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 4.89458703995  expr= x**0.111111111111111 + x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
vlen= 256 Time: compile= 1.92048120499 ,compute= 21.867613554 ,total= 23.788094759

Time= 0.0682580471039  expr= x**1.0
Time= 0.677155971527  expr= x**0.5 + x**1.0
Time= 1.25157594681  expr= x**0.333333333333333 + x**0.5 + x**1.0
Time= 1.84160709381  expr= x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 2.41642284393  expr= x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 2.98730587959  expr= x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 3.56346201897  expr= x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 4.14961910248  expr= x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
Time= 4.74849295616  expr= x**0.111111111111111 + x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
vlen= 128 Time: compile= 0.609242200851 ,compute= 21.7038998604 ,total= 22.3131420612


benchmark-llvm-sqrt.py
LLVM JIT time:  3.50151109695  expr= x**1.0
LLVM JIT time:  4.04695487022  expr= x**0.5 + x**1.0
LLVM JIT time:  4.58365797997  expr= x**0.333333333333333 + x**0.5 + x**1.0
LLVM JIT time:  5.21860003471  expr= x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
LLVM JIT time:  5.76458215714  expr= x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
LLVM JIT time:  6.20199203491  expr= x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
LLVM JIT time:  6.77218604088  expr= x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
LLVM JIT time:  7.4955060482  expr= x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
LLVM JIT time:  8.06003522873  expr= x**0.111111111111111 + x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0

benchmark-sage-sqrt.py
sage fast_float time:  5.96055078506  expr= x
sage fast_float time:  6.05862402916  expr= x + x^0.5
sage fast_float time:  5.93401217461  expr= x + x^0.5 + x^0.3333333333333333
sage fast_float time:  6.09424686432  expr= x + x^0.5 + x^0.3333333333333333 + x^0.25
sage fast_float time:  6.09410905838  expr= x + x^0.5 + x^0.3333333333333333 + x^0.25 + x^0.2
sage fast_float time:  5.9449198246  expr= x + x^0.5 + x^0.3333333333333333 + x^0.25 + x^0.2 + x^0.16666666666666666
sage fast_float time:  6.04044818878  expr= x + x^0.5 + x^0.3333333333333333 + x^0.25 + x^0.2 + x^0.16666666666666666 + x^0.14285714285714285
sage fast_float time:  6.06557106972  expr= x + x^0.5 + x^0.3333333333333333 + x^0.25 + x^0.2 + x^0.16666666666666666 + x^0.14285714285714285 + x^0.125
sage fast_float time:  5.94781494141  expr= x + x^0.5 + x^0.3333333333333333 + x^0.25 + x^0.2 + x^0.16666666666666666 + x^0.14285714285714285 + x^0.125 + x^0.1111111111111111


benchmark-sympy-ufuncify-sqrt.py

sympy ufuncify time:  7.96253705025  expr= x**1.0
sympy ufuncify time:  7.87664294243  expr= x**0.5 + x**1.0
sympy ufuncify time:  8.78509807587  expr= x**0.333333333333333 + x**0.5 + x**1.0
sympy ufuncify time:  9.33145308495  expr= x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy ufuncify time:  9.97222709656  expr= x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy ufuncify time:  10.3883759975  expr= x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy ufuncify time:  10.766947031  expr= x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy ufuncify time:  11.2898588181  expr= x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy ufuncify time:  11.4600138664  expr= x**0.111111111111111 + x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0

sympy lambdify time:  1.86726713181  expr= x**1.0
sympy lambdify time:  3.04771709442  expr= x**0.5 + x**1.0
sympy lambdify time:  4.0152220726  expr= x**0.333333333333333 + x**0.5 + x**1.0
sympy lambdify time:  5.23916387558  expr= x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy lambdify time:  6.23207306862  expr= x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy lambdify time:  7.33628582954  expr= x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy lambdify time:  8.46323394775  expr= x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy lambdify time:  9.58110308647  expr= x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0
sympy lambdify time:  10.5341880322  expr= x**0.111111111111111 + x**0.125 + x**0.142857142857143 + x**0.166666666666667 + x**0.2 + x**0.25 + x**0.333333333333333 + x**0.5 + x**1.0


benchmark-theano-sqrt-vectorized.py

theano function time:  0.869971036911  expr= Elemwise{pow,no_inplace}.0
theano function time:  0.987299919128  expr= Elemwise{add,no_inplace}.0
theano function time:  1.39320397377  expr= Elemwise{add,no_inplace}.0
theano function time:  1.91916298866  expr= Elemwise{add,no_inplace}.0
theano function time:  2.42727303505  expr= Elemwise{add,no_inplace}.0
theano function time:  2.93831396103  expr= Elemwise{add,no_inplace}.0
theano function time:  3.44927096367  expr= Elemwise{add,no_inplace}.0
theano function time:  4.08599281311  expr= Elemwise{add,no_inplace}.0
theano function time:  5.02067494392  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.861986160278  expr= Elemwise{pow,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.985459804535  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  1.38895702362  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  1.91385388374  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  2.43097901344  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  2.93244695663  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  3.44322896004  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  4.07272791862  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  5.00644207001  expr= Elemwise{add,no_inplace}.0


yliu@yliu-dev:~/workspace_py/sympy-llvm$ python benchmark-theano-sqrt.py 
/usr/local/lib/python2.7/dist-packages/sympy/printing/theanocode.py:16: UserWarning: theano modules are deprecated and will be removed in release 0.7
  from theano.sandbox import linalg as tlinalg
theano function time:  74.1050848961  expr= Elemwise{pow,no_inplace}.0
theano function time:  71.7205440998  expr= Elemwise{add,no_inplace}.0
theano function time:  72.3560888767  expr= Elemwise{add,no_inplace}.0
theano function time:  73.5202741623  expr= Elemwise{add,no_inplace}.0
theano function time:  74.6754498482  expr= Elemwise{add,no_inplace}.0
theano function time:  75.8028309345  expr= Elemwise{add,no_inplace}.0
theano function time:  77.20499897   expr= Elemwise{add,no_inplace}.0
theano function time:  77.0179371834  expr= Elemwise{add,no_inplace}.0
theano function time:  77.8787260056  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  72.9467160702  expr= Elemwise{pow,no_inplace}.0
theano theano_function time:  71.8329679966  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  73.4284508228  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  73.6405601501  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  74.7291829586  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  75.8065569401  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  80.3459968567  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  78.4058189392  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  83.4859149456  expr= Elemwise{add,no_inplace}.0


-----------------------------------------Taylor Series------------------------------------------------------
/home/yliu/workspace_py/sympy-llvm/benchmark-llvm-taylor-vectorize.py
vlen=256

Time= 0.039134979248  expr= 1.00000000000000
Time= 0.0466578006744  expr= 1.0*x + 1.0
Time= 0.0468530654907  expr= 0.5*x**2 + 1.0*x + 1.0
Time= 0.0490889549255  expr= 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
Time= 0.0530180931091  expr= 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
Time= 0.0567910671234  expr= 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
Time= 0.0594549179077  expr= 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
Time= 0.0683329105377  expr= 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
Time= 0.0687310695648  expr= 2.48015873015873e-5*x**8 + 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
vlen= 256 Time: compile= 0.465799093246 ,compute= 0.488062858582 ,total= 0.953861951828


/home/yliu/workspace_py/sympy-llvm/benchmark-llvm-taylor.py
LLVM JIT time:  3.47477483749  expr= 1.00000000000000
LLVM JIT time:  3.57408905029  expr= 1.0*x + 1.0
LLVM JIT time:  3.47729301453  expr= 0.5*x**2 + 1.0*x + 1.0
LLVM JIT time:  3.67761206627  expr= 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
LLVM JIT time:  3.5669631958  expr= 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
LLVM JIT time:  3.46216797829  expr= 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
LLVM JIT time:  3.57206201553  expr= 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
LLVM JIT time:  3.57880496979  expr= 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
LLVM JIT time:  3.53235793114  expr= 2.48015873015873e-5*x**8 + 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0

benchmark-sage-taylor.py

sage fast_float time:  1.83930516243  expr= 1
sage fast_float time:  2.00562596321  expr= x + 1
sage fast_float time:  2.01100683212  expr= 1/2*x^2 + x + 1
sage fast_float time:  2.08117794991  expr= 1/6*x^3 + 1/2*x^2 + x + 1
sage fast_float time:  2.28247404099  expr= 1/24*x^4 + 1/6*x^3 + 1/2*x^2 + x + 1
sage fast_float time:  2.27572798729  expr= 1/120*x^5 + 1/24*x^4 + 1/6*x^3 + 1/2*x^2 + x + 1
sage fast_float time:  2.41463088989  expr= 1/720*x^6 + 1/120*x^5 + 1/24*x^4 + 1/6*x^3 + 1/2*x^2 + x + 1
sage fast_float time:  2.63132190704  expr= 1/5040*x^7 + 1/720*x^6 + 1/120*x^5 + 1/24*x^4 + 1/6*x^3 + 1/2*x^2 + x + 1
sage fast_float time:  2.58098220825  expr= 1/40320*x^8 + 1/5040*x^7 + 1/720*x^6 + 1/120*x^5 + 1/24*x^4 + 1/6*x^3 + 1/2*x^2 + x + 1


/home/yliu/workspace_py/sympy-llvm/benchmark-sympy-ufuncify-taylor.py
sympy ufuncify time:  7.99719905853  expr= 1.00000000000000
sympy ufuncify time:  7.8732612133  expr= 1.0*x + 1.0
sympy ufuncify time:  7.77631092072  expr= 0.5*x**2 + 1.0*x + 1.0
sympy ufuncify time:  8.71262288094  expr= 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy ufuncify time:  9.18606209755  expr= 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy ufuncify time:  9.87490200996  expr= 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy ufuncify time:  10.1178441048  expr= 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy ufuncify time:  10.5825340748  expr= 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy ufuncify time:  11.1187059879  expr= 2.48015873015873e-5*x**8 + 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0

sympy lambdify time:  1.31747102737  expr= 1.00000000000000
sympy lambdify time:  1.68059802055  expr= 1.0*x + 1.0
sympy lambdify time:  2.87474584579  expr= 0.5*x**2 + 1.0*x + 1.0
sympy lambdify time:  4.20905900002  expr= 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy lambdify time:  5.715695858  expr= 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy lambdify time:  7.15989995003  expr= 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy lambdify time:  8.31176805496  expr= 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy lambdify time:  9.67445516586  expr= 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0
sympy lambdify time:  11.135641098  expr= 2.48015873015873e-5*x**8 + 0.000198412698412698*x**7 + 0.00138888888888889*x**6 + 0.00833333333333333*x**5 + 0.0416666666666667*x**4 + 0.166666666666667*x**3 + 0.5*x**2 + 1.0*x + 1.0


/usr/local/lib/python2.7/dist-packages/sympy/printing/theanocode.py:16: UserWarning: theano modules are deprecated and will be removed in release 0.7
  from theano.sandbox import linalg as tlinalg
Total loops: 1000
theano function time:  0.889164924622  expr= Elemwise{mul,no_inplace}.0
theano function time:  0.976317882538  expr= Elemwise{add,no_inplace}.0
theano function time:  0.974488973618  expr= Elemwise{add,no_inplace}.0
theano function time:  0.974408864975  expr= Elemwise{add,no_inplace}.0
theano function time:  0.975341796875  expr= Elemwise{add,no_inplace}.0
theano function time:  0.990405082703  expr= Elemwise{add,no_inplace}.0
theano function time:  0.983306884766  expr= Elemwise{add,no_inplace}.0
theano function time:  0.978288888931  expr= Elemwise{add,no_inplace}.0
theano function time:  0.980741977692  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.871601104736  expr= Elemwise{mul,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.972712993622  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.973408937454  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.975970029831  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.975951910019  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.975165843964  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.976746082306  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.990477085114  expr= Elemwise{add,no_inplace}.0
sympy.printing.theanocode theano_function time:  0.997059822083  expr= Elemwise{add,no_inplace}.0

yliu@yliu-dev:~/workspace_py/sympy-llvm$ python benchmark-theano-taylor.py 
/usr/local/lib/python2.7/dist-packages/sympy/printing/theanocode.py:16: UserWarning: theano modules are deprecated and will be removed in release 0.7
  from theano.sandbox import linalg as tlinalg
theano function time:  73.8917908669  expr= Elemwise{mul,no_inplace}.0
theano function time:  71.4365959167  expr= Elemwise{add,no_inplace}.0
theano function time:  71.5178279877  expr= Elemwise{add,no_inplace}.0
theano function time:  78.7809510231  expr= Elemwise{add,no_inplace}.0
theano function time:  72.6675970554  expr= Elemwise{add,no_inplace}.0
theano function time:  73.3062839508  expr= Elemwise{add,no_inplace}.0
theano function time:  74.5479679108  expr= Elemwise{add,no_inplace}.0
theano function time:  73.915309906  expr= Elemwise{add,no_inplace}.0
theano function time:  76.4422588348  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  73.3530890942  expr= Elemwise{mul,no_inplace}.0
theano theano_function time:  71.559417963  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  73.3109629154  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  79.5304589272  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  72.1418139935  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  73.1892831326  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  75.3305029869  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  73.5343701839  expr= Elemwise{add,no_inplace}.0
theano theano_function time:  75.2834439278  expr= Elemwise{add,no_inplace}.0


SymJava
Time: 0.007 expr=1.0
Time: 0.014 expr=1.0 + x
Time: 0.781 expr=1.0 + x + 0.5*x^2
Time: 1.451 expr=1.0 + x + 0.5*x^2 + 0.16666666666666666*x^3
Time: 2.151 expr=1.0 + x + 0.5*x^2 + 0.16666666666666666*x^3 + 0.041666666666666664*x^4
Time: 2.863 expr=1.0 + x + 0.5*x^2 + 0.16666666666666666*x^3 + 0.041666666666666664*x^4 + 0.008333333333333333*x^5
Time: 3.537 expr=1.0 + x + 0.5*x^2 + 0.16666666666666666*x^3 + 0.041666666666666664*x^4 + 0.008333333333333333*x^5 + 0.001388888888888889*x^6
Time: 4.287 expr=1.0 + x + 0.5*x^2 + 0.16666666666666666*x^3 + 0.041666666666666664*x^4 + 0.008333333333333333*x^5 + 0.001388888888888889*x^6 + 1.984126984126984E-4*x^7
Time: 4.98 expr=1.0 + x + 0.5*x^2 + 0.16666666666666666*x^3 + 0.041666666666666664*x^4 + 0.008333333333333333*x^5 + 0.001388888888888889*x^6 + 1.984126984126984E-4*x^7 + 2.48015873015873E-5*x^8


SymLLVM (C++)
Time: funcTaylor[0]=0.001794
Time: funcTaylor[1]=0.001676
Time: funcTaylor[2]=0.001672
Time: funcTaylor[3]=0.002529
Time: funcTaylor[4]=0.003131
Time: funcTaylor[5]=0.003551
Time: funcTaylor[6]=0.003629
Time: funcTaylor[7]=0.004573
Time: funcTaylor[8]=0.004784
Time: funcTaylor[9]=0.005324
